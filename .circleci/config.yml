# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install -r requirements-dev.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}

      # run stats notebook!
      - run:
          name: run notebook
          command: |
            . venv/bin/activate
            python -m papermill.cli examples/download-stats.ipynb output.ipynb

      - store_artifacts:
          path: output.ipynb
          destination: notebook-output.ipynb

          # this ends up at a url like
          # https://5-142710335-gh.circle-artifacts.com/0/notebook-output.ipynb
          # so we should send users to a url like
          # http://nbviewer.jupyter.org/urls/5-142710335-gh.circle-artifacts.com/0/notebook-output.ipynb
